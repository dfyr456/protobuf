{"ast":null,"code":"export function parseInput(input){var normalizedInput=input.replace(/\\s/g,\"\");var normalizedHexInput=normalizedInput.replace(/0x/g,\"\").toLowerCase();if(isHex(normalizedHexInput)){return Buffer.from(normalizedHexInput,\"hex\");}else{return Buffer.from(normalizedInput,\"base64\");}}export function isHex(string){var result=true;var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=string[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var char=_step.value;if(!(char>=\"a\"&&char<=\"f\"||char>=\"0\"&&char<=\"9\")){result=false;}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}return result;}export function bufferToPrettyHex(buffer){var output=\"\";var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=buffer[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var v=_step2.value;if(output!==\"\"){output+=\" \";}var hex=v.toString(16);if(hex.length===1){output+=\"0\"+hex;}else{output+=hex;}}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return!=null){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}return output;}export function bufferLeToBeHex(buffer){var output=\"\";var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=buffer[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var v=_step3.value;var hex=v.toString(16);if(hex.length===1){output=\"0\"+hex+output;}else{output=hex+output;}}}catch(err){_didIteratorError3=true;_iteratorError3=err;}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return!=null){_iterator3.return();}}finally{if(_didIteratorError3){throw _iteratorError3;}}}return output;}","map":{"version":3,"names":["parseInput","input","normalizedInput","replace","normalizedHexInput","toLowerCase","isHex","Buffer","from","string","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","char","value","err","return","bufferToPrettyHex","buffer","output","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","v","hex","toString","length","bufferLeToBeHex","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3"],"sources":["/Users/afganaskarli/PycharmProjects/protobuf/src/hexUtils.js"],"sourcesContent":["export function parseInput(input) {\n  const normalizedInput = input.replace(/\\s/g, \"\");\n  const normalizedHexInput = normalizedInput.replace(/0x/g, \"\").toLowerCase();\n  if (isHex(normalizedHexInput)) {\n    return Buffer.from(normalizedHexInput, \"hex\");\n  } else {\n    return Buffer.from(normalizedInput, \"base64\");\n  }\n}\n\nexport function isHex(string) {\n  let result = true;\n  for (const char of string) {\n    if (!((char >= \"a\" && char <= \"f\") || (char >= \"0\" && char <= \"9\"))) {\n      result = false;\n    }\n  }\n  return result;\n}\n\nexport function bufferToPrettyHex(buffer) {\n  let output = \"\";\n  for (const v of buffer) {\n    if (output !== \"\") {\n      output += \" \";\n    }\n\n    const hex = v.toString(16);\n    if (hex.length === 1) {\n      output += \"0\" + hex;\n    } else {\n      output += hex;\n    }\n  }\n  return output;\n}\n\nexport function bufferLeToBeHex(buffer) {\n  let output = \"\";\n  for (const v of buffer) {\n    const hex = v.toString(16);\n    if (hex.length === 1) {\n      output = \"0\" + hex + output;\n    } else {\n      output = hex + output;\n    }\n  }\n  return output;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}