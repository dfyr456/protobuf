{"ast":null,"code":"import JSBI from\"jsbi\";import{bufferLeToBeHex,bufferToPrettyHex}from\"./hexUtils\";import{interpretAsSignedType}from\"./varintUtils\";export function decodeFixed32(value){var floatValue=value.readFloatLE(0);var intValue=value.readInt32LE(0);var uintValue=value.readUInt32LE(0);var result=[];result.push({type:\"Int\",value:intValue});if(intValue!==uintValue){result.push({type:\"Unsigned Int\",value:uintValue});}result.push({type:\"Float\",value:floatValue});return result;}export function decodeFixed64(value){var floatValue=value.readDoubleLE(0);var uintValue=JSBI.BigInt(\"0x\"+bufferLeToBeHex(value));var intValue=twoComplements(uintValue);var result=[];result.push({type:\"Int\",value:intValue.toString()});return result;}// this is also related\nexport function decodeVarintParts(value){var result=[];var intVal=JSBI.BigInt(value);result.push({value:intVal.toString()});return result;}export function decodeStringOrBytes(value){if(!value.length){return{type:\"string|bytes\",value:\"\"};}var td=new TextDecoder(\"utf-8\",{fatal:true});try{return{type:\"string\",value:td.decode(value)};}catch(e){return{type:\"bytes\",value:bufferToPrettyHex(value)};}}var maxLong=JSBI.BigInt(\"0x7fffffffffffffff\");var longForComplement=JSBI.BigInt(\"0x10000000000000000\");function twoComplements(uintValue){if(JSBI.greaterThan(uintValue,maxLong)){return JSBI.subtract(uintValue,longForComplement);}else{return uintValue;}}","map":{"version":3,"names":["JSBI","bufferLeToBeHex","bufferToPrettyHex","interpretAsSignedType","decodeFixed32","value","floatValue","readFloatLE","intValue","readInt32LE","uintValue","readUInt32LE","result","push","type","decodeFixed64","readDoubleLE","BigInt","twoComplements","toString","decodeVarintParts","intVal","decodeStringOrBytes","length","td","TextDecoder","fatal","decode","e","maxLong","longForComplement","greaterThan","subtract"],"sources":["/Users/afganaskarli/PycharmProjects/protobuf/src/protobufPartDecoder.js"],"sourcesContent":["import JSBI from \"jsbi\";\nimport { bufferLeToBeHex, bufferToPrettyHex } from \"./hexUtils\";\nimport { interpretAsSignedType } from \"./varintUtils\";\n\nexport function decodeFixed32(value) {\n  const floatValue = value.readFloatLE(0);\n  const intValue = value.readInt32LE(0);\n  const uintValue = value.readUInt32LE(0);\n\n  const result = [];\n\n  result.push({ type: \"Int\", value: intValue });\n\n  if (intValue !== uintValue) {\n    result.push({ type: \"Unsigned Int\", value: uintValue });\n  }\n\n  result.push({ type: \"Float\", value: floatValue });\n\n  return result;\n}\n\nexport function decodeFixed64(value) {\n  const floatValue = value.readDoubleLE(0);\n  const uintValue = JSBI.BigInt(\"0x\" + bufferLeToBeHex(value));\n  const intValue = twoComplements(uintValue);\n\n  const result = [];\n\n  result.push({ type: \"Int\", value: intValue.toString() });\n\n\n  return result;\n}\n\n\n// this is also related\n\nexport function decodeVarintParts(value) {\n  const result = [];\n  const intVal = JSBI.BigInt(value);\n  result.push({  value: intVal.toString() });\n\n\n  return result;\n}\n\nexport function decodeStringOrBytes(value) {\n  if (!value.length) {\n    return { type: \"string|bytes\", value: \"\" };\n  }\n  const td = new TextDecoder(\"utf-8\", { fatal: true });\n  try {\n    return { type: \"string\", value: td.decode(value) };\n  } catch (e) {\n    return { type: \"bytes\", value: bufferToPrettyHex(value) };\n  }\n}\n\nconst maxLong = JSBI.BigInt(\"0x7fffffffffffffff\");\nconst longForComplement = JSBI.BigInt(\"0x10000000000000000\");\n\nfunction twoComplements(uintValue) {\n  if (JSBI.greaterThan(uintValue, maxLong)) {\n    return JSBI.subtract(uintValue, longForComplement);\n  } else {\n    return uintValue;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}