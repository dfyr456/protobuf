{"ast":null,"code":"import _slicedToArray from \"/Users/afganaskarli/PycharmProjects/protobuf/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/afganaskarli/PycharmProjects/protobuf/src/App.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Container, Divider, TextArea } from \"semantic-ui-react\";\nimport { useLocation } from 'react-router-dom';\nimport { parseInput, bufferToPrettyHex } from \"./hexUtils\";\nimport \"./App.css\";\nimport ProtobufDisplay from \"./ProtobufDisplay\";\nimport { decodeProto } from \"./protobufDecoder\";\nfunction App() {\n  const _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    hex = _useState2[0],\n    setHex = _useState2[1];\n  const _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    hexBuffer = _useState4[0],\n    setHexBuffer = _useState4[1];\n  const location = useLocation();\n  const onHexChanged = e => {\n    setHex(e.target.value);\n  };\n  const onSubmit = () => {\n    const buffer = parseInput(hex);\n    setHex(bufferToPrettyHex(buffer));\n    setHexBuffer(buffer);\n  };\n  useEffect(() => {\n    if (location.pathname !== '/') {\n      const newHex = decodeURI(location.pathname.substr(1));\n      setHex(newHex);\n\n      // Parsing and decoding\n      const buffer = parseInput(newHex);\n      setHex(bufferToPrettyHex(buffer));\n      setHexBuffer(buffer);\n    }\n  }, [location.pathname]);\n  const result = hexBuffer ? React.createElement(ProtobufDisplay, {\n    value: decodeProto(hexBuffer),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }) : null;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, result);\n}\nexport default App;","map":{"version":3,"names":["React","Fragment","useState","useEffect","Container","Divider","TextArea","useLocation","parseInput","bufferToPrettyHex","ProtobufDisplay","decodeProto","App","_useState","_useState2","_slicedToArray","hex","setHex","_useState3","_useState4","hexBuffer","setHexBuffer","location","onHexChanged","e","target","value","onSubmit","buffer","pathname","newHex","decodeURI","substr","result","createElement","__source","fileName","_jsxFileName","lineNumber","__self"],"sources":["/Users/afganaskarli/PycharmProjects/protobuf/src/App.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { Container, Divider, TextArea } from \"semantic-ui-react\";\nimport { useLocation } from 'react-router-dom';\nimport { parseInput, bufferToPrettyHex } from \"./hexUtils\";\nimport \"./App.css\";\nimport ProtobufDisplay from \"./ProtobufDisplay\";\nimport { decodeProto } from \"./protobufDecoder\";\n\nfunction App() {\n  const [hex, setHex] = useState(\"\");\n  const [hexBuffer, setHexBuffer] = useState(\"\");\n  const location = useLocation();\n  const onHexChanged = e => {\n    setHex(e.target.value);\n  };\n\n  const onSubmit = () => {\n    const buffer = parseInput(hex);\n    setHex(bufferToPrettyHex(buffer));\n    setHexBuffer(buffer);\n  };\n\n  useEffect(() => {\n    if (location.pathname !== '/') {\n      const newHex = decodeURI(location.pathname.substr(1));\n      setHex(newHex);\n\n      // Parsing and decoding\n      const buffer = parseInput(newHex);\n      setHex(bufferToPrettyHex(buffer));\n      setHexBuffer(buffer);\n    }\n  }, [location.pathname]);\n\n\n  const result = hexBuffer ? (\n\n\n      <ProtobufDisplay value={decodeProto(hexBuffer)} />\n\n  ) : null;\n\n  return (\n    <Fragment>\n\n\n\n      {result}\n\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC5D,SAASC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,mBAAmB;AAChE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,EAAEC,iBAAiB,QAAQ,YAAY;AAC1D,OAAO,WAAW;AAClB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,WAAW,QAAQ,mBAAmB;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAA,MAAAC,SAAA,GACSX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3BG,GAAG,GAAAF,UAAA;IAAEG,MAAM,GAAAH,UAAA;EAAA,MAAAI,UAAA,GACgBhB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAvCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,MAAMG,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,YAAY,GAAGC,CAAC,IAAI;IACxBP,MAAM,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACxB,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,MAAM,GAAGpB,UAAU,CAACQ,GAAG,CAAC;IAC9BC,MAAM,CAACR,iBAAiB,CAACmB,MAAM,CAAC,CAAC;IACjCP,YAAY,CAACO,MAAM,CAAC;EACtB,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACd,IAAImB,QAAQ,CAACO,QAAQ,KAAK,GAAG,EAAE;MAC7B,MAAMC,MAAM,GAAGC,SAAS,CAACT,QAAQ,CAACO,QAAQ,CAACG,MAAM,CAAC,CAAC,CAAC,CAAC;MACrDf,MAAM,CAACa,MAAM,CAAC;;MAEd;MACA,MAAMF,MAAM,GAAGpB,UAAU,CAACsB,MAAM,CAAC;MACjCb,MAAM,CAACR,iBAAiB,CAACmB,MAAM,CAAC,CAAC;MACjCP,YAAY,CAACO,MAAM,CAAC;IACtB;EACF,CAAC,EAAE,CAACN,QAAQ,CAACO,QAAQ,CAAC,CAAC;EAGvB,MAAMI,MAAM,GAAGb,SAAS,GAGpBpB,KAAA,CAAAkC,aAAA,CAACxB,eAAe;IAACgB,KAAK,EAAEf,WAAW,CAACS,SAAS,CAAE;IAAAe,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;IAAA;IAAAC,MAAA;EAAA,CAAE,CAAC,GAElD,IAAI;EAER,OACEvC,KAAA,CAAAkC,aAAA,CAACjC,QAAQ;IAAAkC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;IAAA;IAAAC,MAAA;EAAA,GAINN,MAEO,CAAC;AAEf;AAEA,eAAerB,GAAG"},"metadata":{},"sourceType":"module"}